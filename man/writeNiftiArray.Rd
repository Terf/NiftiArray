% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/writeNiftiArray.R
\name{writeNiftiArray}
\alias{writeNiftiArray}
\title{Write NiftiArray Object}
\usage{
writeNiftiArray(x, filepath = tempfile(fileext = ".h5"),
  name = "image", header_name = "hdr", chunkdim = NULL,
  level = NULL, verbose = FALSE, header = NULL, overwrite = FALSE)
}
\arguments{
\item{x}{A \code{niftiImage} object loaded into R or a file path to a \code{NIfTI} file.}

\item{filepath}{The file path (single character string) of where to save the HDF5
file converted from the NIfTI input as \code{x}. By default creates a temporary file on disk.}

\item{name}{The name of the group for the NIfTI image in the HDF5 file. Default is set to "image".
Unless you have to other "image" groups in the HDF5 file there is no need to change default settings.}

\item{header_name}{The name of the group for the NIfTI header in the HDF5 file. Default is set to "header".
Unless you have to other "header" groups in the HDF5 file there is no need to change default settings.}

\item{chunkdim}{The dimensions of the chunks to use for
writing the data to disk.
Passed to \link[HDF5Array:writeHDF5Array]{HDF5Array::writeHDF5Array}.}

\item{level}{The compression level,
passed to \link[HDF5Array:writeHDF5Array]{HDF5Array::writeHDF5Array}.}

\item{verbose}{Display progress,
passed to \link[HDF5Array:writeHDF5Array]{HDF5Array::writeHDF5Array}.}

\item{header}{List of header information;
overrides call of \link{nifti_header}.}

\item{overwrite}{\code{FALSE} by default. In the
event that an HDF5 file already exists for \code{filepath}
input then do not overwrite it.
If set to \code{TRUE} then the \code{name} and \code{header_name} group objects in the HDF5 file
location will overwrite.}
}
\value{
A \code{NiftiArray} object.
}
\description{
A function for writing NIfTI objects on disk to a specifically formatted HDF5 file.
The HDF5 file will include a group for the NIfTI image or array and the NIfTI header.
}
\examples{
nii_fname = system.file("extdata", "example.nii.gz", package = "RNifti")
res = writeNiftiArray(nii_fname)
filepath = tempfile(fileext = ".h5")
res = writeNiftiArray(nii_fname, filepath = filepath)
testthat::expect_error(
   writeNiftiArray(nii_fname, filepath = filepath),
   regexp = "already exist",
)
res = writeNiftiArray(nii_fname, filepath = filepath, overwrite = TRUE)
img = RNifti::readNifti(nii_fname)
writeNiftiArray(c(img), header = nifti_header(img))
}
